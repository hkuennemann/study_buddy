Question 1: What are the four key steps involved in extracting knowledge and value from data, as outlined in the introduction to Big Data?
Answer: According to the text, the four key steps to extract knowledge and value from data are:

1.  Collected
2.  Stored
3.  Managed
4.  Analyzed
--------------------------------------------------

Question 2: Define "Analytics" in the context of data analysis. What four characteristics should patterns and models discovered through analytics possess?
Answer: In the context of data analysis, analytics is defined as the science that analyzes crude data to extract useful knowledge from it.

The four characteristics that patterns and models discovered through analytics should possess are:

1.  **Valid:** Hold on new data with some certainty.
2.  **Useful:** Should be possible to act on the item.
3.  **Unexpected:** Non-obvious to the system.
4.  **Understandable:** Humans should be able to interpret the pattern.
--------------------------------------------------

Question 3: Differentiate between Machine Learning and Data Mining.
Answer: Data Mining focuses on discovering unknown properties in the data, while Machine Learning is the study of computer algorithms that improve automatically through experience.

--------------------------------------------------

Question 4: Explain the "Three V's" of Big Data and provide a brief description of each.
Answer: The "Three V's" of Big Data are:

*   **Volume:** The amount of data being processed.
*   **Velocity:** The ability to deal with data arriving very fast.
*   **Variety:** Data from different sources and with different formats.
--------------------------------------------------

Question 5: Define "Model," "Method," and "Algorithm" in the context of data science.
Answer: Here are the definitions of "Model," "Method," and "Algorithm" in the context of data science, according to the provided text:

*   **Model:** A generalization obtained from data that can be used afterward to generate predictions for new given instances.
*   **Method:** A systematic procedure that allows achieving an intended goal.
*   **Algorithm:** A step-by-step set of instructions easily understandable by humans.
--------------------------------------------------

Question 6: What is the difference between a hyper-parameter and a model parameter? Give an example of each.
Answer: I am sorry, but this document does not contain the answer to your question about the difference between a hyper-parameter and a model parameter, nor does it provide examples of each.

--------------------------------------------------

Question 7: In the context of Pandas, what is a one-to-one (map) transformation and a many-to-one (reduce) transformation? Why is the transformation from one DataFrame to another useful?
Answer: Here's an explanation of one-to-one (map) and many-to-one (reduce) transformations in Pandas, along with the usefulness of DataFrame transformations:

**One-to-one (map) transformation:**

*   This transformation transforms each row of the DataFrame into another row of a DataFrame.
*   Each transformation can be performed independently.

**Many-to-one (reduce) transformation:**

*   This transformation transforms multiple rows of the DataFrame into a single row of the new DataFrame.
*   This transformation needs to get the data for all rows to be reduced.

**Usefulness of DataFrame transformations:**

*   The transformation from one DataFrame to another is useful because we can use parallel computing, resulting in a shorter running time.
--------------------------------------------------

Question 8: Describe how to select rows based on conditions in a Pandas DataFrame. How can you combine multiple conditions?
Answer: To select rows based on conditions in a Pandas DataFrame, you can use the following syntax:

```python
df[df["header"] == "condition"]
```

This will return a new DataFrame containing only the rows where the value in the column "header" is equal to "condition".

To combine multiple conditions, you can use the `&` (and) or `|` (or) operators:

```python
df[(df["header_1"] == "condition_1") & (df["header_2"] > 10)]
```

This will return a new DataFrame containing only the rows where the value in the column "header_1" is equal to "condition_1" **and** the value in the column "header_2" is greater than 10.

```python
df[(df["header_1"] == "condition_1") | (df["header_2"] > 10)]
```

This will return a new DataFrame containing only the rows where the value in the column "header_1" is equal to "condition_1" **or** the value in the column "header_2" is greater than 10.

--------------------------------------------------

Question 9: Explain the difference between a left join, right join, inner join, and outer join when combining DataFrames.
Answer: Here's an explanation of the different types of joins used to combine DataFrames:

*   **Left Join:** This join takes all rows from the "left" DataFrame and matches them with rows from the "right" DataFrame based on a specified key column. If there's a match, the corresponding columns from the right DataFrame are included in the result. If there's no match in the right DataFrame for a row in the left DataFrame, the columns from the right DataFrame will have `NaN` (Not a Number) values in the resulting DataFrame.

*   **Right Join:** This is the opposite of a left join. It takes all rows from the "right" DataFrame and matches them with rows from the "left" DataFrame based on a specified key column. If there's a match, the corresponding columns from the left DataFrame are included in the result. If there's no match in the left DataFrame for a row in the right DataFrame, the columns from the left DataFrame will have `NaN` values in the resulting DataFrame.

*   **Inner Join:** This join only includes rows where there is a match in *both* the left and right DataFrames based on the specified key column. Rows that don't have a matching key in the other DataFrame are excluded from the result.

*   **Outer Join:** This join (also sometimes called a "full outer join") includes *all* rows from both the left and right DataFrames. If there's a match based on the key column, the corresponding columns from both DataFrames are included. If there's no match in one of the DataFrames, the columns from the other DataFrame will have `NaN` values for those rows.
--------------------------------------------------

Question 10: What is a time-series? Differentiate between univariate and multivariate time-series, providing an example of each.
Answer: A time-series is a series of values that have a timestamp.

*   **Univariate:** The time-series has a single feature. E.g.: price in a stock index, mortality, birth rate
*   **Multivariate:** The time-series has multiple features. E.g.: Weather (composed of temperature, pressure, humidity, etc.)
--------------------------------------------------

